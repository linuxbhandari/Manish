########### MySQL #############
==============================
https://www.tecmint.com/basic-mysql-interview-questions-for-database-administrators/
https://phoenixnap.com/kb/myisam-vs-innodb
http://www.expertphp.in/article/what-are-the-main-differences-between-innodb-and-myisam
https://www.2daygeek.com/linux-mysqladmin-command-administrate-mysql-mariadb-server/
https://www.tecmint.com/gliding-through-database-mysql-in-a-nutshell-part-i/

MySQL working
https://dbadiaries.com/what-is-mysql-replication-and-how-does-it-work


# yum install mariadb-server
# systemctl status mariadb


# show engines;

[mysqld]
default-storage-engine=MyISAM
default-storage-engine=InnoDB

MariaDB [mysql]> show table status where name = '<table name>';
show table status;
mysqlshow -i <database_name>  # will show the info for all tables of a specific database.
mysqlshow -i <database_name> <table_name>  #will do so just for a specific table.
show table status like 'user';
HOW TABLE STATUS LIKE 'use%';

MariaDB [mydb]> create table min (id Int(4), First_name Varchar(20), email Varchar(20));
MariaDB [mydb]> alter table min add Last_name varchar(20) after First_name;
MariaDB [mydb]> alter table min add country varchar(20) after email;
MariaDB [mydb]> insert into min values ('1', 'Manish', 'Bhandari', 'linux.bhandari1@gmail.com', 'india');
MariaDB [mydb]> delete from min where id='2';
MariaDB [mydb]> update min set email ='manish.bh@nic.in' where id='1';
MariaDB [mydb]> alter table min drop country;

Reset mysql password
https://www.a2hosting.in/kb/developer-corner/mysql/reset-mysql-root-password
https://phoenixnap.com/kb/how-to-reset-mysql-root-password-windows-linux

[root@vm1 mysql]# systemctl stop mariadb
mysqld_safe --skip-grant-tables

MariaDB [(none)]> update mysql.user SET Password=PASSWORD('redhat@123') where User='root';
MariaDB [(none)]> flush privileges;
exit
[root@vm1 mariadb]# mysqladmin -uroot -predhat shutdown

start service



===== Master/Slave

https://www.tecmint.com/how-to-setup-mysql-master-slave-replication-in-rhel-centos-fedora/
https://www.opsdash.com/blog/mysql-replication-howto.html
https://www.alibabacloud.com/blog/how-to-configure-mysql-master-slave-replication-on-ubuntu-16-04_593982

[mysqld]

server-id = 1
bind-address = 192.168.122.98
log-bin = /var/lib/mysql/mysql-bin


MariaDB [(none)]> create user 'replica'@'192.168.122.242' identified by 'slavepassword';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> grant replication slave on *.* TO 'replica'@'192.168.122.242'
    -> ;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> flush privileges;
Query OK, 0 rows affected (0.00 sec)

or 

MariaDB [(none)]> FLUSH TABLES WITH READ LOCK;
Query OK, 0 rows affected (0.01 sec)



MariaDB [(none)]> show master status;
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000002 |      584 |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)


[root@vm1 my.cnf.d]# mysqldump -u root -p --all-databases --master-data > dbdbump.sql
Enter password: 

MariaDB [(none)]> unlock tables;
Query OK, 0 rows affected (0.00 sec)




########### systemctl #############
==================================
https://www.tecmint.com/manage-services-using-systemd-and-systemctl-in-linux/
https://phoenixnap.com/kb/start-stop-restart-linux-services

# systemctl stop mariadb
# systemctl start mariadb

[root@vm1 ~]# systemctl enable mariadb
Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.
[root@vm1 ~]# systemctl disable mariadb
Removed symlink /etc/systemd/system/multi-user.target.wants/mariadb.service.

[root@vm1 ~]# systemctl is-active mariadb
active

[root@vm1 ~]# systemctl is-enabled mariadb
disabled

[root@vm1 ~]# systemctl | grep mariadb
  mariadb.service                                                                          loaded active running   MariaDB database server

# systemctl list-units
# systemctl list-units --all --state=active/inactive



